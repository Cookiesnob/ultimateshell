##########################################################################################
# Customize file classifications.                                                        #
# Results from files under any classifier will be excluded from LGTM                     #
# statistics.                                                                            #
##########################################################################################

##########################################################################################
# Use the `path_classifiers` block to define changes to the default classification of    #
# files.                                                                                 #
##########################################################################################

path_classifiers:
  docs:
    # Identify the top-level file called `generate_javadoc.py` as documentation-related.
    - generate_javadoc.py
  test:
    # Override LGTM's default classification of test files by excluding all files.
    - exclude: /

#########################################################################################
# Use the `queries` block to change the default display of query results.               #
#########################################################################################

queries:
  # Start by hiding the results of all queries.
  - exclude: "*"
  # Then include all queries tagged 'security' and 'correctness', and with a severity of
  # 'error'.
  - include:           
      tags:
        - "security"
        - "correctness"           
      severity: "error"
  # Specifically hide the results of two queries.
  - exclude: java/equals-on-unrelated-types
  # Refine by including the `java/command-line-injection` query.
  - include: java/command-line-injection

#########################################################################################
# Define changes to the default code extraction process.                                #
# Each block configures the extraction of a single language, and modifies actions in a  #
# named step. Every named step includes automatic default actions,                      #
# except for the 'prepare' step. The steps are performed in the following sequence:     #
# prepare                                                                               #
# after_prepare                                                                         #
# configure (C/C++ only)                                                                #
# python_setup (Python only)                                                            #
# before_index                                                                          #
# index                                                                                 #
##########################################################################################

#########################################################################################
# Environment variables available to the steps:                                         #
#########################################################################################

# LGTM_SRC
#   The root of the source tree.
# LGTM_WORKSPACE
#   An existing (initially empty) folder outside the source tree.
#   Used for temporary download and setup commands.

#########################################################################################
# Use the extraction block to define changes to the default code extraction process     #
# for one or more languages. The settings for each language are defined in a child      #
# block, with one or more steps.                                                        #
#########################################################################################

extraction:
  # Define settings for Java analysis
  ####################################
  java:
    # The `prepare` step exists for customization on LGTM.com only.
    # prepare:
    #   packages:
    #     - example_package
    # Add an `after-prepare` step if you need to run commands after the prepare step.
    # Each command should be listed on a separate line.
    after_prepare:
      - export PATH=$LGTM_WORKSPACE/tools:$PATH
    # The `index` step extracts information from the files in the codebase.
    index:
      # Specify Gradle settings.
      gradle:
        # Specify the required Gradle version.
        # Default: determined automatically.
        version: 4.4
      # Override the autobuild process by specifying a list of custom build commands
      # to use instead. 
      build_command:
        - mvn install:install-file -Dfile=src/main/resources/libs/jediterm-pty-2.49.jar -DgroupId=com.g3g4x5x6  -DartifactId=jediterm-pty -Dversion=2.49 -Dpackaging=jar
        - mvn install:install-file -Dfile=src/main/resources/libs/jediterm-ssh-2.49.jar -DgroupId=com.g3g4x5x6  -DartifactId=jediterm-ssh -Dversion=2.49 -Dpackaging=jar
        - mvn install:install-file -Dfile=src/main/resources/libs/terminal-2.54.jar -DgroupId=com.g3g4x5x6  -DartifactId=terminal -Dversion=2.54 -Dpackaging=jar
        - mvn install:install-file -Dfile=src/main/resources/libs/jediterm-typeahead-2.54.jar -DgroupId=com.g3g4x5x6  -DartifactId=jediterm-typeahead -Dversion=2.54 -Dpackaging=jar
        - mvn install:install-file -Dfile=src/main/resources/libs/tightvnc-jviewer.jar -DgroupId=com.g3g4x5x6  -DartifactId=tightvnc-jviewer -Dversion=2.8.3 -Dpackaging=jar
        - mvn assembly:assembly

      # Specify the Java version required to build the project.
      java_version: 11
      # Specify whether to extract Java .properties files
      # Default: false
      properties_files: true
      # Specify Maven settings.
      maven:
        # Specify the path (absolute or relative) of a Maven settings file to use.
        # Default: Maven uses a settings file in the default location, if it exists.
        settings_file: /opt/share/settings.xml
        # Specify the path of a Maven toolchains file.
        # Default: Maven uses a toolchains file in the default location, if it exists.
        toolchains_file: /opt/share/toolchains.xml
        # Specify the required Maven version.
        # Default: the Maven version is determined automatically, where feasible.
        version: 3.5.2
      # Specify how XML files should be extracted:
      #   all = extract all XML files.
      #   default = only extract XML files named `AndroidManifest.xml`, `pom.xml`, and `web.xml`.
      #   disabled = do not extract any XML files.
      xml_mode: all

